import Docs from '../../../../components/Docs/Docs'
import Highlight from 'react-highlight.js'

export default function Index(props) {

    return(
        <Docs>
            <div className="container">
                <h1>Мульти Зоны</h1>

Зона - это единичное развертывание приложения Next.js. Вы можете создать несколько зон и объединить их в одно приложение.
<p>Например, допустим, у вас есть следующие приложения:</p>

<p className="list"> - Приложение для обслуживания /blog/**</p>
<p className="list"> - Другое приложение для обслуживания всех остальных страниц</p>


Благодаря поддержке нескольких зон вы можете объединить оба этих приложения в одно, что позволит вашим клиентам просматривать его с помощью одного URL-адреса, но вы можете разрабатывать и развертывать оба приложения независимо.

<h2>Как определить зону</h2>

Нет никаких специальных API, связанных с зонами. Вам нужно только сделать следующее:
<p className="list">
 - Убедитесь, что в вашем приложении есть только те страницы, которые вам нужны, то есть в приложении не может быть страниц из другого приложения, если в приложении Aесть, /blog то в приложении их тоже не должно быть.
</p>
<p className="list">
 - Обязательно добавьте assetPrefix, чтобы избежать конфликтов со статическими файлами.
</p>

<h2>Как объединить зоны</h2>

Вы можете объединять зоны, используя любой HTTP-прокси.
<p>
Для Vercel вы можете использовать один vercel.json для развертывания обоих приложений. Он позволяет определять маршруты маршрутизации для нескольких приложений, как показано ниже:
</p>


<Highlight language="json">
{`{
  "version": 2,
  "builds": [
    { "src": "blog/package.json", "use": "@now/next" },
    { "src": "home/package.json", "use": "@now/next" }
  ],
  "routes": [
    { "src": "/blog/_next(.*)", "dest": "blog/_next$1" },
    { "src": "/blog(.*)", "dest": "blog/blog$1" },
    { "src": "(.*)", "dest": "home$1" }
  ]
}`}
</Highlight>

Вы также можете настроить прокси-сервер для маршрутизации с использованием набора маршрутов, подобных указанным выше, например, развернуть приложение блога https://blog.example.comи домашнее приложение, https://home.example.comа затем добавить прокси-сервер для обоих приложений в https://example.com.
            </div>
        </Docs>
    )
}
